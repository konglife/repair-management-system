// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Category model for product organization
model Category {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[] // Relation: One Category can have many Products

  @@map("categories")
}

// Unit model for product measurement units
model Unit {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[] // Relation: One Unit can have many Products

  @@map("units")
}

// Product model (future implementation)
model Product {
  id            String   @id @default(cuid())
  name          String
  salePrice     Float
  quantity      Int      @default(0)
  averageCost   Float    @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relations
  category        Category        @relation(fields: [categoryId], references: [id])
  categoryId      String
  unit            Unit            @relation(fields: [unitId], references: [id])
  unitId          String
  purchaseRecords PurchaseRecord[] // One Product can have many PurchaseRecords
  
  @@map("products")
}

// PurchaseRecord model for stock purchase history
model PurchaseRecord {
  id           String   @id @default(cuid())
  quantity     Int
  costPerUnit  Float
  purchaseDate DateTime @default(now())
  
  // Relation
  product      Product @relation(fields: [productId], references: [id])
  productId    String
  
  @@map("purchase_records")
}

// Customer model for CRM functionality
model Customer {
  id        String   @id @default(cuid())
  name      String
  phone     String? // Optional phone number
  address   String? // Optional address
  createdAt DateTime @default(now())

  // Relations (for future implementation)
  // sales     Sale[]
  // repairs   Repair[]

  @@map("customers")
}